
function Test-Recipes {

  Param (
    $RecipesToTest
  )

$Start = get-date
$Scores = @()
$Scores += 3
$Scores += 7

$Indexes = @()
$Indexes += 1 | select-object @{Name='Elf';Expression={'A'}},@{Name='Index';Expression={0}},@{Name='Number';Expression={3}}
$Indexes += 1 | select-object @{Name='Elf';Expression={'B'}},@{Name='Index';Expression={1}},@{Name='Number';Expression={7}}

$RecipeNumber = $RecipesToTest
$RecipeNumber = '909441'
$SubScores = @()
$SubScores += 3
$SubScores += 7
$i = 0
Do {
  $Now = get-date
  $NewScore = ($Indexes | Measure-Object -Sum -Property Number).Sum

  if ( $NewScore -gt 9 ) {
    $Scores += ($newScore.ToString().ToCharArray() | select-object @{Name='Number';Expression={[int32]$([string]$_)}}).Number
    $SubScores += ($newScore.ToString().ToCharArray() | select-object @{Name='Number';Expression={[int32]$([string]$_)}}).Number
  } else {
    $Scores += $newScore
    $SubScores += $newScore
  }

  if ($SubScores.count -gt $RecipeNumber.ToString().Length) { do {$SubScores = $SubScores[1..$($SubScores.Count)]} until ($SubScores.Count -eq $RecipeNumber.ToString().Length) }
  #$SubScores -join ''

  $Indexes | foreach {
    $Elf = $_.Elf
    $NumberToMove = $_.Number + 1
    if ($NumberToMove % $Scores.count -eq 0 ) {
    } else {
      $Index = $_.Index + ($NumberToMove % $Scores.count)
      if ($Index -ge $Scores.count) { $Index = $Index - $Scores.count}
      $_.Index = $Index
      $_.Number = $Scores[$Index]
    }
  }
  $i++
#$($Scores.Number -join '')
if ($i % 1000 -eq 0 ) { $i }
} until ( $($SubScores -join '') -match $RecipeNumber) 
$($Scores -join '').length - $RecipeNumber.ToString().Length
}
