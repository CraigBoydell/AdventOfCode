$Start = get-date
$Scores = @()
$Scores += 1 | select-object @{Name='Number';Expression={3}},@{Name='Elf';Expression={'A'}}
$Scores += 1 | select-object @{Name='Number';Expression={7}},@{Name='Elf';Expression={'B'}}

$Indexes = @()
$Indexes += 1 | select-object @{Name='Elf';Expression={'A'}},@{Name='Index';Expression={0}},@{Name='CurrentValue';Expression={3}}
$Indexes += 1 | select-object @{Name='Elf';Expression={'B'}},@{Name='Index';Expression={1}},@{Name='CurrentValue';Expression={7}}

$RecipeNumber = 909441

$i = 0
Do {
  $Now = get-date
  write-progress -Activity $('RpS: ' + [math]::Round(( $Scores.count / $($Now - $Start).TotalSeconds  )) + ' : ' + [string]$Scores.count + '/' + ($RecipeNumber + 10))
  $NewScore = ($Scores | where {$_.Elf -eq 'A'}).Number + ($Scores | where {$_.Elf -eq 'B'}).Number
  $newScore.ToString().ToCharArray() | foreach { $Scores += $_ | select-object @{Name='Number';Expression={[int]([string]$_)}},@{Name='Elf';Expression={$NULL}}  }
#  'Determine To Move: ' + ( measure-command {
    $ToMove = $Scores | where {$_.Elf -ne $NULL} | sort-object -property Elf
#  })
#  $ToMove
  $ToMove | foreach {
    $Elf = $_.Elf
    $NumberToMove = $_.Number + 1
    if ($NumberToMove % $Scores.count -eq 0 ) {
#     'No Move'
    } else {
#     'Must Move: ' + $($NumberToMove % $Scores.count)
#     'CurIndex: ' + [array]::indexof($Scores.elf,$_.Elf)
#     'ToIndex: ' + $([array]::indexof($Scores.elf,$_.Elf) + ($NumberToMove % $Scores.count))
#      'Create Index: ' + ( measure-command {
        $Index = $(($Indexes | where {$_.Elf -eq $Elf}).Index + ($NumberToMove % $Scores.count))
#      })
      if ($Index -ge $Scores.count) { $Index = $Index - $Scores.count; 'Index Reset: ' + $y; $y=0} else {$y++}
      $Scores[$Index].Elf = $_.Elf

      ($Indexes | where {$_.Elf -eq $Elf}).Index = $Index
      $_.Elf = $NULL
    }
  }
  $i++
} until ( $Scores.Count -gt ($RecipeNumber + 10))
#$Scores

$AllScores = $Scores.Number -join ''

$AllScores.substring($RecipeNumber,10)
